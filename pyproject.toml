[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyside-app-core"
version = "0.3.0"
description = "Framework for PySide6 Applications"
readme = "README.md"
authors = [
    "Leo Covarrubias <leo@leocov.com>"
]
license = "CC BY 4.0"
repository = "https://github.com/leocov-dev/pyside-app-core"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Desktop Environment",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["pyside", "pyside6", "frameless", "app", "style"]
include = [
    "py.typed",
    "icons",
    "templates"
]

[tool.poetry.dependencies]
python = ">=3.11"
pyside6 = { version = "^6.6.3.1", python = ">=3.11,<3.13" }
jinja2 = "^3.1.3"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
black = "^24.3.0"
pytest = "*"
pytest_mock = "*"
pre-commit = "*"
import-linter = "2.0.x"
bumpver = "2023.1121"

[tool.poetry.scripts]
compile-pyside-theme = "pyside_app_core.theme_generator.__main__:main"

# ------------------------------
# testing
[tool.pytest.ini_options]
pythonpath = ["src"]

# ------------------------------
# linting
[tool.black]
line-length = 88

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
packages = ["pyside_app_core"]
follow_imports = "skip"
follow_imports_for_stubs = true
check_untyped_defs = true

# ------------------------------
# version managment
[tool.bumpver]
current_version = "0.3.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"src/pyside_app_core/__init__.py" = [
    "{version}"
]

# ------------------------------
# import linter config and rules
[tool.importlinter]
root_packages = [
    "pyside_app_core",
]
include_external_packages = true

[[tool.importlinter.contracts]]
name = "Module Layering"
type = "layers"
layers = [
    "frameless",
    "standard",
    "qt",
    "theme_generator",
    "style",
    "services",
    "utils",
    "errors",
    "log",
    "constants",
    "types",
]
containers = ["pyside_app_core"]
exhaustive = true


# ------------------------------
