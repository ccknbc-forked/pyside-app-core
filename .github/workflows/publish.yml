name: Publish
on:
  workflow_dispatch:

jobs:
  release:
    name: Create A Release
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write
      id-token: write

    outputs:
      TAG: ${{ steps.semver.outputs.nextStrict }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Generate Changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@v2.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          show-emoji: false

      - name: Semver
        id: semver
        uses: ietf-tools/semver-action@v1.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "next: ${{ steps.semver.outputs.nextStrict }}"

      - id: current
        run: echo "version=$(pipx run hatch version | tr -d '\n')" >> $GITHUB_OUTPUT

      - if: ${{ steps.current.outputs.version == steps.semver.outputs.nextStrict || !steps.current.outputs.version }}
        run: exit 1

      - name: Version Up
        run: pipx run hatch version ${{ steps.semver.outputs.nextStrict }}

      - name: Commit version change
        run: |
          git config --global user.name 'GitHub Automation'
          git config --global user.email 'gh-automation@leocov.com'
          git add src/pyside_app_core/__init__.py
          git commit -m "chore: version up to: ${{ steps.semver.outputs.nextStrict }}"
          git push
          git tag ${{ steps.semver.outputs.nextStrict }}
          git push --tags

      - name: Create Build
        run: pipx run hatch build

      - uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: ./dist/*

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          tag: ${{ steps.semver.outputs.nextStrict }}
          name: "Release v${{ steps.semver.outputs.nextStrict }}"
          body: ${{ steps.changelog.outputs.changelog }}

  pypi:
    runs-on: ubuntu-latest
    needs: [ release ]

    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/pyside-app-core

    name: Publish to PyPi
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release download ${{ needs.release.outputs.TAG }} --dir dist -p "*.whl" -p "*.tar.gz"

      # trusted publishing workflow:
      # https://docs.pypi.org/trusted-publishers/adding-a-publisher/
      - name: Publish To PyPi
        uses: pypa/gh-action-pypi-publish@release/v1.8

