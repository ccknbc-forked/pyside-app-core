name: Publish

on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"

jobs:

  # -------------
  release:
    name: Create A Release
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write
      id-token: write

    outputs:
      TAG: ${{ steps.semantic.outputs.tag }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Personal Access Token enables git push in actions (repo contents permission)
          token: ${{ secrets.PAT }}

      - name: Python Semantic Release
        id: semantic
        uses: python-semantic-release/python-semantic-release@v9.10.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build: false
          tag: true
          vcs_release: true
          changelog: false

      - name: Create Build
        run: pipx run hatch build -t wheel --clean

      - name: Generate Build Signatures
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: ./dist/*

      - name: Python Semantic Release - Publish
        uses: python-semantic-release/publish-action@v9.10.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # -------------
  pypi:
    name: Publish to PyPi
    needs: [ release ]

    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/pyside-app-core

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release download ${{ needs.release.outputs.TAG }} --dir dist -p "*.whl" -p "*.tar.gz"

      # trusted publishing workflow:
      # https://docs.pypi.org/trusted-publishers/adding-a-publisher/
      - name: Publish To PyPi
        uses: pypa/gh-action-pypi-publish@release/v1.9

